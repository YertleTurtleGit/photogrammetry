class StereoDepthHelper{static async getDepthMapping(e,t,a=21,n=2){return new Promise((o=>{setTimeout((async()=>{e=await StereoDepthHelper.preprocessImage(e),t=await StereoDepthHelper.preprocessImage(t);const r={width:e.width,height:e.height},h=new GLSL.Shader(r);h.bind();const s=GLSL.render(GLSL.Image.load(e)).getPixelArray();h.purge();const i=new GLSL.Shader(r);i.bind();const l=GLSL.render(GLSL.Image.load(t)).getPixelArray();i.purge();const d=StereoDepthHelper.getImageChunks(s,r,a),g=document.createElement("canvas");g.width=r.width,g.height=r.height;const c=g.getContext("2d"),w=document.createElement("canvas");w.width=r.width,w.height=2*r.height;const L=w.getContext("2d");document.body.appendChild(g),document.body.appendChild(w),L.drawImage(e,0,0,r.width,r.height),L.drawImage(t,0,r.height,r.width,r.height);for(let e=0;e<d.length;e++){const t=d[e],o={x:t.offset.x+(a-1)/2,y:t.offset.y+(a-1)/2};StereoDepthHelper.getBestNeedleChunkFit(t,l,r,n).then((e=>{if(e){const n={x:o.x-e.x,y:o.y-e.y};let h=Math.sqrt(Math.pow(n.x,2)+Math.pow(n.y,2));h*=10,console.log(h);const s=String(255-Math.round(Math.min(255,h)));L.beginPath(),L.moveTo(o.x,o.y),L.strokeStyle="red",L.lineTo(e.x,e.y+r.height),L.stroke(),c.fillStyle="rgb("+s+", "+s+", "+s+")",c.fillRect(t.offset.x,t.offset.y,a,a)}}))}o(null)}))}))}static async preprocessImage(e){const t=new GLSL.Shader({width:e.width,height:e.height});t.bind();const a=new GLSL.Image(e),n=GLSL.render(a.applyFilter([[-1,-1,-1],[-1,8.5,-1],[-1,-1,-1]])).getJsImage();return t.purge(),n}static async getBestNeedleChunkFit(e,t,a,n){return new Promise((o=>{setTimeout((()=>{const r=Math.sqrt(e.data.length/4),h=(r-1)/2;let s,i=Number.MAX_VALUE,l=0;for(let d=0;d<a.width;d++)for(let g=0;g<a.height;g++){let c=0;for(let o=0;o<r;o+=n)for(let s=0;s<r;s+=n){const n=4*(d+o+h+(g+s+h)*a.width),i=t[n+0],l=t[n+1],w=t[n+2],L=4*(s+o*r),p=e.data[L+0],u=e.data[L+1],S=e.data[L+2];c+=Math.abs(i-p)+Math.abs(l-u)+Math.abs(w-S)}if(c<i?(i=c,s={x:d+r,y:g+r}):c===i&&l++,0===i)return console.log({bestFitCoordinate:s,lowestAberrance:i,twinCount:l}),void o(s)}console.log({bestFitCoordinate:s,lowestAberrance:i,twinCount:l}),o(s)}))}))}static getImageChunks(e,t,a){const n=[];let o=0;for(let r=(a-1)/2;r<t.width-(a-1)/2;r+=a)for(let h=(a-1)/2;h<t.height-(a-1)/2;h+=a){n.push({data:[],offset:{x:r,y:h}});for(let s=0;s<a;s++)for(let i=0;i<a;i++){const a=4*(s+r+(i+h)*t.width),l=e[a+0],d=e[a+1],g=e[a+2],c=e[a+3];n[o].data.push(l,d,g,c)}o++}return n}static async getNeedleChunkFitMapGPU(e,t,a){const n=new GLSL.Shader({width:t.width,height:t.height});n.bind();const o=Math.sqrt(e.length/3),r=(o-1)/2,h=new GLSL.Image(t);let s=new GLSL.Float(0),i=0;for(let t=0;t<o;t+=a)for(let n=0;n<o;n+=a){const a=3*(t+n*o),l=h.getNeighborPixel(t-r,n-r),d=l.channel(0).subtractFloat(new GLSL.Float(e[a+0]/255)).abs(),g=l.channel(1).subtractFloat(new GLSL.Float(e[a+1]/255)).abs(),c=l.channel(2).subtractFloat(new GLSL.Float(e[a+2]/255)).abs();s=s.addFloat(d,g,c),i++}s=new GLSL.Float(1).subtractFloat(s.divideFloat(new GLSL.Float(3*i)));const l=GLSL.render(new GLSL.Vector4([s,s,s,new GLSL.Float(1)])).getJsImage();return n.purge(),l}}
