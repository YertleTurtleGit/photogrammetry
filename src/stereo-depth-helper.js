class StereoDepthHelper{static async getDepthMapping(t,e,a=21,n=7){const o=StereoDepthHelper.getImageChunks(t,a),h=document.createElement("canvas");h.width=t.width,h.height=e.height,document.body.appendChild(h),document.body.appendChild(t);const l=h.getContext("2d");for(let t=0;t<o.length;t++){const h=o[t],r={x:h.offset.x+a,y:h.offset.y+a},i=await StereoDepthHelper.getFeaturePoint(h.data,e,n),d={x:r.x-i.x,y:r.y-i.y},s=Math.sqrt(Math.pow(d.x,2)+Math.pow(d.y,2)),g=String(255-Math.round(Math.min(255,s)));l.fillStyle="rgb("+g+", "+g+", "+g+")",l.fillRect(h.offset.x,h.offset.y,a,a)}return null}static async getFeaturePoint(t,e,a){const n=await StereoDepthHelper.getNeedleChunkFitMap(t,e,a);return StereoDepthHelper.getBrightestPixel(n)}static async getNeedleChunkFitMap(t,e,a){const n=new GLSL.Shader({width:e.width,height:e.height});n.bind();const o=Math.sqrt(t.length/3),h=(o-1)/2,l=new GLSL.Image(e);let r=new GLSL.Float(0),i=0;for(let t=0;t<o;t+=a)for(let t=0;t<o;t+=a)i++;for(let e=0;e<o;e+=a)for(let n=0;n<o;n+=a){const a=3*(e+n*o),d=l.getNeighborPixel(e-h,n-h),s=d.channel(0).subtractFloat(new GLSL.Float(t[a+0]/255)).abs(),g=d.channel(1).subtractFloat(new GLSL.Float(t[a+1]/255)).abs(),c=d.channel(2).subtractFloat(new GLSL.Float(t[a+2]/255)).abs();r=r.addFloat(s.divideFloat(new GLSL.Float(3*i)),g.divideFloat(new GLSL.Float(3*i)),c.divideFloat(new GLSL.Float(3*i)))}r=new GLSL.Float(1).subtractFloat(r);const d=GLSL.render(new GLSL.Vector4([r,r,r,new GLSL.Float(1)])).getJsImage();return n.purge(),d}static getImageChunks(t,e){const a={width:t.width,height:t.height},n=new GLSL.Shader(a);n.bind();const o=GLSL.render(GLSL.Image.load(t)).getPixelArray();n.unbind();const h=[];let l=0;for(let t=0;t+e<a.width;t+=e)for(let n=0;n+e<a.height;n+=e){h.push({data:[],offset:{x:t,y:n}});for(let r=0;r<e;r++)for(let i=0;i<e;i++){const e=4*(r+t+(i+n)*a.width),d=o[e+0],s=o[e+1],g=o[e+2];h[l].data.push(d,s,g)}l++}return h}static getBrightestPixel(t){let e,a=0;const n={width:t.width,height:t.height},o=new GLSL.Shader(n);o.bind();const h=GLSL.render(GLSL.Image.load(t)).getPixelArray();o.unbind();for(let t=0;t<n.width;t++)for(let o=0;o<n.height;o++){const l=h[4*(t+o*n.width)];l>a&&(e={x:t,y:o},a=l)}return e}}
